<!DOCTYPE html>
<html>
  <head>
    <title>Viewing Results</title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script>
	<script src="http://code.highcharts.com/highcharts.js"></script>
	<script src="http://code.highcharts.com/highcharts-more.js"></script>
	<script src="http://code.highcharts.com/modules/exporting.js"></script>
	<script src="/socket.io/socket.io.js"></script>
	
    <script>

    	var clapping_chart;
    	var participant_chart;
    	var history_chart;
    	var current_claps = Object();
    	var current_participants = Object();
    	var total_participants = Object();
    	$(function () {
		    clapping_chart = new Highcharts.Chart({
		    
		        chart: {
		            renderTo: 'container_1',
		            type: 'gauge',
		        },
		    
		        title: {
		            text: 'Clapometer'
		        },
		        
		        pane: {
		            startAngle: -150,
		            endAngle: 150
		        },            
		    
		        yAxis: [{
		            min: 0,
		            max: 200,
		        }],
		    
		        series: [{
		            data: [0],
		        }]
		    
		    },
		     function(clapping_chart) {
		        setInterval(function() {
		        							
					var newVal = 0;
					
					for (var key in current_claps) {
		            	newVal += parseInt(current_claps[key]);
		            }
		            
		            if (newVal > 200){
		            	newVal = 200;
		            }
		     
		     		var point = clapping_chart.series[0].points[0];
			        point.update(newVal);
			        
		    
		        }, 100);
		    
		    });
		    
		    history_chart = new Highcharts.Chart({
            chart: {
                type: 'area',
                renderTo: 'container_3',
                events: {
	                load: requestHistory
	            }
            },
            title: {
                text: 'Over Time'
            },
            xAxis: {
                type: 'datetime',
            },
            yAxis: {
                min: 0
            },
            series: []
        });
		    
		    participant_chart = new Highcharts.Chart({
		    
		        chart: {
		            renderTo: 'container_2',
		            type: 'bar',
		            events: {
		                load: requestParticipantCount
		            }
		        },
		    
		        title: {
		            text: 'Participants'
		        },
		                 		    
		        yAxis: [{
		            min: 0,
		            max: 20,
		        }],
		    
		        series: [
		        {
		            name: 'Current',
		            data: [0],
		        },
		        {
		            name: 'Total',
		            data: [0],
		        }
		        ]
		    
		    },
		     function(participant_chart) {
		        setInterval(function() {
		        	
		            var point = participant_chart.series[0].points[0];
		            var newVal;
		    
		            if (point.y > 0) {
		                newVal = point.y - 0.01;
		            }
		            
		            var now = new Date().getTime();
		            
		            for (var key in current_participants) {
		            	if (parseInt(current_participants[key]) < now - parseInt($('#decay').val())){
		            		delete current_participants[key];
		            		delete current_claps[key];
		            	}
		            }

		            point.update(Object.keys(current_participants).length);
		    
		        }, 100);
		    
		    });
		});
		
		$(function () {
 
    });
    	
    	var URL = window.location.protocol + "//" + window.location.host;
    	var socket = io.connect(URL);
		socket.emit('event', '<%= event %>');
		
		socket.on('exit', function (data) {
			delete total_participants[data.user];
			var point = participant_chart.series[1].points[0];
     		point.update(Object.keys(total_participants).length);
		});
		
		socket.on('join', function (data) {
			total_participants[data.user] = new Date().getTime();
			var point = participant_chart.series[1].points[0];
     		point.update(Object.keys(total_participants).length);
		});

		
		socket.on('message', function (data) {
			var scaled_value = parseInt(data.power)/$('#scaler').val();

			current_participants[data.user] = new Date().getTime();
			history_chart.series[0].addPoint([data.response_time, scaled_value]);
			
			if (!(data.user in total_participants)){
				total_participants[data.user] = new Date().getTime();
				var point = participant_chart.series[1].points[0];
     			point.update(Object.keys(total_participants).length);
			}
			
			current_claps[data.user] = scaled_value;
		});
		
		function requestHistory() {
		    $.ajax({
		        url: 'history',
		        type: "GET",
		        dataType: "json",
		        success: function(data) {
		        	history_chart.addSeries({
		              name: "History",
		              data: data
		            });
		        },
		        cache: false
		    });
		}
		
		function requestParticipantCount() {
		    $.ajax({
		        url: 'participants',
		        type: "GET",
		        dataType: "json",
		        success: function(data) {
		        	for (var i=0; i<data.length; i++) {
					    total_participants[data[i].uid] = new Date().getTime();
					}
		            var point = participant_chart.series[1].points[0];
     				point.update(data.length);
		        },
		        cache: false
		    });
		}
    	
	</script>
  </head>
  <body>
  	<div class="header">Dashboard: <%= name%></div>
  	<div class="subhead"><a href="/">Back To Main</a></div>
  	<div class="content">
	    <div id="container_1" style="float:left;"></div>
	    <div id="container_2" style="width: 50%; float: right;"></div>
	    <br style="clear: both;"/>
	    <div id="container_3" style="width: 100%"></div>
    </div>
    <input type="text" id="scaler" value="1" size="2"/>
    <input type="text" id="decay" value="5000" size="4"/>
  </body>
</html>